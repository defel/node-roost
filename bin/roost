#!/usr/bin/env node

// ---

var path = require('path');

// ---

var opt = require('node-getopt')
	.create([
		['f' , 'file=ARG', 'Specify the root of a roost project or a roost manifest.'],
		['d' , 'dry', 'Dry run the roost manifest.'],
		['v' , 'verbose+', 'Make it verbose.'],
		['h' , 'help', 'Display this help.'],
	])
	.bindHelp()
	.parseSystem();
	
// ---

var lib = path.join(__dirname, '..', 'lib');
var logger = require(path.join(lib, 'logger.js'));
var manifest = require(path.join(lib, 'manifest.js'));
var plugins = require(path.join(lib, 'plugins.js'));
var targets = require(path.join(lib, 'targets.js'));
var engine = require(path.join(lib, 'engine.js'));

// ---

if (opt.options.hasOwnProperty('verbose')) {
	logger.setGlobalLevel(3 - (opt.options.verbose.length < 3 ? opt.options.verbose.length : 3));
}

// ---

var roostLocation;

try {
	roostLocation = manifest.locate(opt.options.file);
} catch (e) {
	console.error(e.message);
	
	process.exit(2);
}

// ---

var roostManifest;

try {
	roostManifest = manifest.load(roostLocation);
} catch (e) {
	console.error(e.message);
	
	process.exit(3);
}

// ---

var roostPlugins;

try {
	roostPlugins = plugins.obtain(roostManifest);
} catch (e) {
	console.error(e.message);
	
	process.exit(4);
}

// ---

var roostTargets;

try {
	roostTargets = targets.obtain(opt.argv.length ? opt.argv : ['local:']);
} catch (e) {
	console.error(e.message);
	
	process.exit(5);
}

// ---

roostTargets.forEach(function (roostTarget) {
	var callback = function (err) {
		if (err) {
			console.error(err.message);
		}
	};
	
	try {
		engine.launch(opt, roostManifest, roostPlugins, roostTarget, callback);
	} catch (e) {
		console.error(e.message);
		
		process.exit(7);
	}
});
